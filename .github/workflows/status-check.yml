name: Hemp Status Check

on:
  # Allow manual trigger
  workflow_dispatch:
  
  # Run twice daily for health checks
  schedule:
    - cron: '0 6,18 * * *'

jobs:
  status-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Debug Environment Variables
        run: |
          echo "üîç Debugging Environment Variables"
          echo "================================="
          echo "SUPABASE_URL exists: ${{ secrets.SUPABASE_URL != '' }}"
          echo "SUPABASE_ANON_KEY exists: ${{ secrets.SUPABASE_ANON_KEY != '' }}"
          echo "OPENAI_API_KEY exists: ${{ secrets.OPENAI_API_KEY != '' }}"
          echo ""
          # Check if variables are being passed to Python
          python -c "
import os
print('Python Environment Check:')
print(f'SUPABASE_URL: {\"Set\" if os.environ.get(\"SUPABASE_URL\") else \"Not set\"}')
print(f'SUPABASE_ANON_KEY: {\"Set\" if os.environ.get(\"SUPABASE_ANON_KEY\") else \"Not set\"}')
print(f'OPENAI_API_KEY: {\"Set\" if os.environ.get(\"OPENAI_API_KEY\") else \"Not set\"}')
          "
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
      - name: Run status check
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "üîç Hemp Automation Status Check"
          echo "==============================="
          echo "Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          
          # Run the monitoring script
          python monitor_hemp.py --recent 24
          
          # Check database connectivity
          echo ""
          echo "üîå Database Connectivity:"
          python verify_setup.py
